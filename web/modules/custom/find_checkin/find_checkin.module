<?php

/**
 * @file
 * Contains find_checkin.
 */

use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_page_attachments().
 */
function find_checkin_page_attachments(array &$attachments) {
  if (!\Drupal::service('router.admin_context')->isAdminRoute()) {
    $attachments['#attached']['library'][] = 'find_checkin/find-checkin-styling';
  }
}

/**
 * Set summary and title using the others fields.
 * Fillout automatically the full address and coordinate fields.
 */
function find_checkin_node_presave(NodeInterface $node) {
  // && $node->isNew()
  if ($node->getType() == 'site_address') {
    $node->getType();
    $field_address = $node->get('field_address')[0];

    $full_address = $field_address->address_line1; //address
    $full_address .= ', ' . $field_address->address_line2; // number address
    //$full_address .= ', ' . $field_address->organization;  // local name
    $full_address .= ' - ' . $field_address->dependent_locality;  // Neighborhood
    $full_address .= ', ' . $field_address->locality; // city
    $full_address .= ' - ' . $field_address->administrative_area; // state
    $full_address .= ', ' . $field_address->postal_code; // cep
    $full_address .= ', ' . $field_address->country_code; // country

    // Set the full address on map field.
    $node->get('field_complete_address')->value = $full_address;

    $address_to_get_coordinates = $field_address->address_line1; //address
    $address_to_get_coordinates .= ' ' . $field_address->address_line2; // number address
    //$address_to_get_coordinates .= ', ' . $field_address->dependent_locality;  // Neighborhood
    $address_to_get_coordinates .= ', ' . $field_address->locality; // city
    $address_to_get_coordinates .= ' - ' . $field_address->administrative_area; // state
    $address_to_get_coordinates .= ', ' . $field_address->postal_code; // cep
    $address_to_get_coordinates .= ', ' . $field_address->country_code; // country

    $url = 'https://nominatim.openstreetmap.org/search?format=json&q=' . urlencode($address_to_get_coordinates);

    $opts = array(
      'http'=>array(
          'user_agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
      )
    );
    $context = stream_context_create($opts);
    $response = file_get_contents($url, false, $context);
    $data = json_decode($response);
    
    if ($data === null) {
      echo "Error decoding JSON response: ";
    } else {
      var_dump($data);
    }

    // Extract the latitude and longitude coordinates from the response
    $lat = $data[0]->lat;
    $lng = $data[0]->lon;

    $node->get('field_coordinates')->value = $lat . ' , ' . $lng;    

  }
}

/**
 * Implements hook_node_access().
 */
// function find_checkin_node_access(NodeInterface $node, $op, AccountInterface $account) {

//   // $current_url = \Drupal::request()->getRequestUri();
//   // $current_url;
//   // // Block access if the user is not authenticated.
//   // if (!$account->isAuthenticated()
//   //   && $current_url != 'user/login'
//   //   && $current_url != '/user/register'
//   //   && $current_url != '/user/password'
//   // ) {
//   //   // Redirect the user to login.
//   //   $response = new RedirectResponse('/user/login');
//   //   $response->send();
//   // }
// }